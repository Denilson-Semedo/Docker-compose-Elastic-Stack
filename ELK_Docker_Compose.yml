version: '2.2'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    container_name: elasticsearch
    user: root
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /elastic/dados:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD", "curl", "-s" , "-f", "http://elasticsearch:9200/_cat/health"]
    networks:
      - elastic
    
  logstash:
    image: docker.elastic.co/logstash/logstash:7.11.0
    container_name: logstash
    links:
    - elasticsearch
    volumes:
    - /logstash:/config-dir
    command: logstash -f /config-dir/logstash.conf
    depends_on:
      elasticsearch:  { condition: service_healthy }
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.0
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    restart: on-failure
    depends_on:
      elasticsearch:  { condition: service_healthy }
    networks:
      - elastic

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.11.0
    container_name: metricbeat
    hostname: metricbeat
    logging:
      options:
        max-file: "3"
        max-size: "50m"
    volumes:
      #The commented sections below enable Metricbeat to monitor the Docker host rather than the Metricbeat container. These are used by the system module.
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      #Allows us to report on docker from the hosts information.
      - /var/run/docker.sock:/var/run/docker.sock
      #We mount the host filesystem so we can report on disk usage with the system module.
      - /:/hostfs:ro
    command: metricbeat -e -system.hostfs=/hostfs -strict.perms=false
    environment:
      - "WAIT_FOR_HOSTS=elasticsearch:9200 kibana:5601"
      - "HOST_ELASTICSEARCH=elasticsearch:9200"
      - "HOST_KIBANA=kibana:5601"
    networks:
      - elastic
    restart: on-failure
    depends_on:
      elasticsearch:  { condition: service_healthy }

networks:
  elastic:
    driver: bridge
